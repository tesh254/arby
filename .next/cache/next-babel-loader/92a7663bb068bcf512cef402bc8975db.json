{"ast":null,"code":"var _jsxFileName = \"/project/arby/pages/index.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\n\nconst IndexPage = () => {\n  const [arbs, setArbitrage] = React.useState({\n    \"home-win\": {\n      platform: \"\",\n      odd: 0.0,\n      arb: 0.0\n    },\n    draw: {\n      platform: \"\",\n      odd: 0.0,\n      arb: 0.0\n    },\n    \"away-win\": {\n      platform: \"\",\n      odd: 0.0,\n      arb: 0.0\n    }\n  });\n  const [totalArbPercentile, setTotalArbPercentile] = React.useState(0);\n  const [profit, setProfit] = React.useState(0);\n  const [inv, setInv] = React.useState(0);\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  function calcIndividualArb() {}\n\n  function calcProfit() {}\n\n  function calculateEverything() {}\n\n  console.log(watch());\n  useEffect(() => {\n    const arb = {};\n    Object.entries(watch()).forEach(([key, value]) => {\n      if (key === \"home-win\" || key === \"away-win\" || key === \"draw\") {\n        const percentile = 1 / parseFloat(value) * 100;\n        Object.assign(arb, {\n          [key]: {\n            platform: \"\",\n            odd: parseFloat(value),\n            arb: percentile\n          }\n        });\n      }\n\n      if (key === \"investment\") {\n        setInv(value);\n      }\n    }); // @ts-ignore\n\n    setArbitrage(prev => _objectSpread(_objectSpread({}, prev), arb));\n  }, [JSON.stringify(watch())]);\n  useEffect(() => {\n    let totalPerc = 0;\n    Object.entries(arbs).forEach( // @ts-ignore\n    ([_, value]) => {\n      if (value.odd) {\n        totalPerc += 1 / value.odd * 100;\n      }\n    });\n    setTotalArbPercentile(totalPerc);\n  }, [JSON.stringify(arbs)]);\n  useEffect(() => {\n    if (totalArbPercentile) {\n      const prof = inv * 100 / totalArbPercentile - inv;\n      setProfit(prof.toFixe);\n    }\n  }, [totalArbPercentile]);\n  return __jsx(\"div\", {\n    className: \"max-w-screen w-full place-items-center justify-center flex flex-col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    className: \"text-2xl font-bold mb-[8px]\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, \"Calc Football Arb\"), __jsx(\"div\", {\n    className: \"my-[8px] min-w-[300px]\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, __jsx(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, \"Investment\"), __jsx(\"input\", _extends({\n    type: \"number\",\n    defaultValue: 0.0,\n    min: 0.0,\n    step: 0.01\n  }, register(\"investment\"), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }))), __jsx(\"div\", {\n    className: \"my-[8px] min-w-[300px]\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, __jsx(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, \"Home Win \", arbs[\"home-win\"].arb.toFixed(2), \"%\", \" \", inv && totalArbPercentile && `KES.${(inv * arbs[\"home-win\"].arb / totalArbPercentile).toFixed(2)}`), __jsx(\"input\", _extends({\n    type: \"number\",\n    defaultValue: 0.0,\n    min: 0.0,\n    step: 0.01\n  }, register(\"home-win\"), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }))), __jsx(\"div\", {\n    className: \"my-[8px] min-w-[300px]\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }, __jsx(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, \"Draw \", arbs[\"draw\"].arb.toFixed(2), \"%\", \" \", inv && totalArbPercentile && `KES.${(inv * arbs[\"draw\"].arb / totalArbPercentile).toFixed(2)}`), __jsx(\"input\", _extends({\n    type: \"number\",\n    defaultValue: 0.0,\n    min: 0.0,\n    step: 0.01\n  }, register(\"draw\"), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }))), __jsx(\"div\", {\n    className: \"my\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }, __jsx(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }, \"Away Win \", arbs[\"away-win\"].arb.toFixed(2), \"%\", \" \", inv && totalArbPercentile && `KES.${(inv * arbs[\"away-win\"].arb / totalArbPercentile).toFixed(2)}`), __jsx(\"input\", _extends({\n    type: \"number\",\n    defaultValue: 0.0,\n    min: 0.0,\n    step: 0.01\n  }, register(\"away-win\"), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }))), __jsx(\"div\", {\n    className: \"mt-[8px] flex flex-col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  }, \"Investment: \", inv), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }\n  }, \"Percentile: \", totalArbPercentile.toFixed(2)), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  }, \"Profit: \", profit)));\n};\n\nexport default IndexPage;","map":{"version":3,"sources":["/project/arby/pages/index.tsx"],"names":["React","useEffect","useForm","IndexPage","arbs","setArbitrage","useState","platform","odd","arb","draw","totalArbPercentile","setTotalArbPercentile","profit","setProfit","inv","setInv","register","handleSubmit","watch","formState","errors","calcIndividualArb","calcProfit","calculateEverything","console","log","Object","entries","forEach","key","value","percentile","parseFloat","assign","prev","JSON","stringify","totalPerc","_","prof","toFixe","toFixed"],"mappings":"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","sourcesContent":["import { stringify } from \"querystring\";\nimport React, { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\n\ntype Arbitrage = {\n  [key in \"home-win\" | \"draw\" | \"away-win\"]: {\n    platform: string;\n    odd: number;\n    arb: number;\n  };\n};\n\nconst IndexPage = () => {\n  const [arbs, setArbitrage] = React.useState<Arbitrage>({\n    \"home-win\": {\n      platform: \"\",\n      odd: 0.0,\n      arb: 0.0,\n    },\n    draw: {\n      platform: \"\",\n      odd: 0.0,\n      arb: 0.0,\n    },\n    \"away-win\": {\n      platform: \"\",\n      odd: 0.0,\n      arb: 0.0,\n    },\n  });\n  const [totalArbPercentile, setTotalArbPercentile] = React.useState(0);\n  const [profit, setProfit] = React.useState<number>(0);\n  const [inv, setInv] = React.useState<number>(0);\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: { errors },\n  } = useForm();\n\n  function calcIndividualArb() {}\n\n  function calcProfit() {}\n\n  function calculateEverything() {}\n\n  console.log(watch());\n\n  useEffect(() => {\n    const arb: unknown = {};\n    Object.entries(watch()).forEach(([key, value]) => {\n      if (key === \"home-win\" || key === \"away-win\" || key === \"draw\") {\n        const percentile: unknown = (1 / parseFloat(value)) * 100;\n\n        Object.assign(arb as Arbitrage, {\n          [key]: {\n            platform: \"\",\n            odd: parseFloat(value),\n            arb: percentile,\n          },\n        });\n      }\n\n      if (key === \"investment\") {\n        setInv(value);\n      }\n    });\n\n    // @ts-ignore\n    setArbitrage((prev: Arbitrage) => ({\n      ...prev,\n      ...(arb as Arbitrage),\n    }));\n  }, [JSON.stringify(watch())]);\n\n  useEffect(() => {\n    let totalPerc = 0;\n    Object.entries(arbs).forEach(\n      // @ts-ignore\n      ([_, value]: [\n        \"home-win\" | \"draw\" | \"away-win\",\n        {\n          platform: string;\n          odd: number;\n        }\n      ]) => {\n        if (value.odd) {\n          totalPerc += (1 / value.odd) * 100;\n        }\n      }\n    );\n\n    setTotalArbPercentile(totalPerc);\n  }, [JSON.stringify(arbs)]);\n\n  useEffect(() => {\n    if (totalArbPercentile) {\n      const prof = ((inv * 100) / totalArbPercentile) - inv;\n\n      setProfit(prof.toFixe);\n    }\n  }, [totalArbPercentile]);\n\n  return (\n    <div className=\"max-w-screen w-full place-items-center justify-center flex flex-col\">\n      <h1 className=\"text-2xl font-bold mb-[8px]\">Calc Football Arb</h1>\n      <div className=\"my-[8px] min-w-[300px]\">\n        <h6>Investment</h6>\n        <input\n          type=\"number\"\n          defaultValue={0.0}\n          min={0.0}\n          step={0.01}\n          {...register(\"investment\")}\n        />\n      </div>\n      <div className=\"my-[8px] min-w-[300px]\">\n        <h6>\n          Home Win {arbs[\"home-win\"].arb.toFixed(2)}%{\" \"}\n          {inv &&\n            totalArbPercentile &&\n            `KES.${((inv * arbs[\"home-win\"].arb) / totalArbPercentile).toFixed(\n              2\n            )}`}\n        </h6>\n        <input\n          type=\"number\"\n          defaultValue={0.0}\n          min={0.0}\n          step={0.01}\n          {...register(\"home-win\")}\n        />\n      </div>\n      <div className=\"my-[8px] min-w-[300px]\">\n        <h6>\n          Draw {arbs[\"draw\"].arb.toFixed(2)}%{\" \"}\n          {inv &&\n            totalArbPercentile &&\n            `KES.${((inv * arbs[\"draw\"].arb) / totalArbPercentile).toFixed(2)}`}\n        </h6>\n        <input\n          type=\"number\"\n          defaultValue={0.0}\n          min={0.0}\n          step={0.01}\n          {...register(\"draw\")}\n        />\n      </div>\n      <div className=\"my\">\n        <h6>\n          Away Win {arbs[\"away-win\"].arb.toFixed(2)}%{\" \"}\n          {inv &&\n            totalArbPercentile &&\n            `KES.${((inv * arbs[\"away-win\"].arb) / totalArbPercentile).toFixed(\n              2\n            )}`}\n        </h6>\n        <input\n          type=\"number\"\n          defaultValue={0.0}\n          min={0.0}\n          step={0.01}\n          {...register(\"away-win\")}\n        />\n      </div>\n      <div className=\"mt-[8px] flex flex-col\">\n        <span>Investment: {inv}</span>\n        <span>Percentile: {totalArbPercentile.toFixed(2)}</span>\n        <span>Profit: {profit}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default IndexPage;"]},"metadata":{},"sourceType":"module"}