{"ast":null,"code":"var _jsxFileName = \"/project/arby/pages/index.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\n\nconst IndexPage = () => {\n  const [arbs, setArbitrage] = React.useState();\n  const [totalArbPercentile, setTotalArbPercentile] = React.useState(0);\n  const [profit, setProfit] = React.useState(0);\n  const [inv, setInv] = React.useState(0);\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  function calcIndividualArb() {}\n\n  function calcProfit() {}\n\n  function calculateEverything() {}\n\n  console.log(watch());\n  useEffect(() => {\n    const arb = {};\n    Object.entries(watch()).forEach(([key, value]) => {\n      if (key === \"home-win\" || key === \"away-win\" || key === \"draw\") {\n        Object.assign(arb, {\n          [key]: {\n            platform: \"\",\n            odd: parseFloat(value)\n          }\n        });\n      }\n    }); // @ts-ignore\n\n    setArbitrage(prev => _objectSpread(_objectSpread({}, prev), arb));\n  }, [JSON.stringify(watch())]);\n  console.log({\n    arbs\n  });\n  return __jsx(\"div\", {\n    className: \"max-w-screen flex flex-col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    className: \"text-2xl font-bold mb-[8px]\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, \"Calc Football Arb\"), __jsx(\"div\", {\n    className: \"my-[8px]\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, __jsx(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, \"Investment\"), __jsx(\"input\", _extends({\n    type: \"number\",\n    defaultValue: 0.0,\n    min: 0.0,\n    step: 0.01\n  }, register(\"investment\"), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }))), __jsx(\"div\", {\n    className: \"my-[8px]\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, __jsx(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"Home Win\"), __jsx(\"input\", _extends({\n    type: \"number\",\n    defaultValue: 0.0,\n    min: 0.0,\n    step: 0.01\n  }, register(\"home-win\"), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }))), __jsx(\"div\", {\n    className: \"my-[8px]\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, __jsx(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, \"Draw\"), __jsx(\"input\", _extends({\n    type: \"number\",\n    defaultValue: 0.0,\n    min: 0.0,\n    step: 0.01\n  }, register(\"draw\"), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }))), __jsx(\"div\", {\n    className: \"my\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, __jsx(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, \"Away Win\"), __jsx(\"input\", _extends({\n    type: \"number\",\n    defaultValue: 0.0,\n    min: 0.0,\n    step: 0.01\n  }, register(\"away-win\"), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }))), __jsx(\"div\", {\n    className: \"mt-[8px] flex flex-col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, \"Investment: \", inv), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, \"Percentile: \", totalArbPercentile), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, \"Profit: \", profit)));\n};\n\nexport default IndexPage;","map":{"version":3,"sources":["/project/arby/pages/index.tsx"],"names":["React","useEffect","useForm","IndexPage","arbs","setArbitrage","useState","totalArbPercentile","setTotalArbPercentile","profit","setProfit","inv","setInv","register","handleSubmit","watch","formState","errors","calcIndividualArb","calcProfit","calculateEverything","console","log","arb","Object","entries","forEach","key","value","assign","platform","odd","parseFloat","prev","JSON","stringify"],"mappings":"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","sourcesContent":["import { stringify } from \"querystring\";\nimport React, { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\n\ntype Arbitrage = {\n  [key in \"home-win\" | \"draw\" | \"away-win\"]: {\n    platform: string;\n    odd: number;\n  };\n};\n\nconst IndexPage = () => {\n  const [arbs, setArbitrage] = React.useState<Arbitrage>();\n  const [totalArbPercentile, setTotalArbPercentile] = React.useState(0);\n  const [profit, setProfit] = React.useState<number>(0);\n  const [inv, setInv] = React.useState<number>(0);\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: { errors },\n  } = useForm();\n\n  function calcIndividualArb() {}\n\n  function calcProfit() {}\n\n  function calculateEverything() {}\n\n  console.log(watch());\n\n  useEffect(() => {\n    const arb = {};\n    Object.entries(watch()).forEach(([key, value]) => {\n      if (key === \"home-win\" || key === \"away-win\" || key === \"draw\") {\n        Object.assign(arb, {\n          [key]: {\n            platform: \"\",\n            odd: parseFloat(value),\n          },\n        });\n      }\n    });\n\n    // @ts-ignore\n    setArbitrage((prev: Arbitrage) => ({\n      ...prev,\n      ...arb,\n    }));\n  }, [JSON.stringify(watch())]);\n\n  console.log({ arbs });\n\n  return (\n    <div className=\"max-w-screen flex flex-col\">\n      <h1 className=\"text-2xl font-bold mb-[8px]\">Calc Football Arb</h1>\n      <div className=\"my-[8px]\">\n        <h6>Investment</h6>\n        <input\n          type=\"number\"\n          defaultValue={0.0}\n          min={0.0}\n          step={0.01}\n          {...register(\"investment\")}\n        />\n      </div>\n      <div className=\"my-[8px]\">\n        <h6>Home Win</h6>\n        <input\n          type=\"number\"\n          defaultValue={0.0}\n          min={0.0}\n          step={0.01}\n          {...register(\"home-win\")}\n        />\n      </div>\n      <div className=\"my-[8px]\">\n        <h6>Draw</h6>\n        <input\n          type=\"number\"\n          defaultValue={0.0}\n          min={0.0}\n          step={0.01}\n          {...register(\"draw\")}\n        />\n      </div>\n      <div className=\"my\">\n        <h6>Away Win</h6>\n        <input\n          type=\"number\"\n          defaultValue={0.0}\n          min={0.0}\n          step={0.01}\n          {...register(\"away-win\")}\n        />\n      </div>\n      <div className=\"mt-[8px] flex flex-col\">\n        <span>Investment: {inv}</span>\n        <span>Percentile: {totalArbPercentile}</span>\n        <span>Profit: {profit}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default IndexPage;"]},"metadata":{},"sourceType":"module"}